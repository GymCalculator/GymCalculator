server.port=9090
spring.profiles.active=GymCalculator

#Facebook
spring.security.oauth2.client.registration.facebook.clientId=1145398259643618
spring.security.oauth2.client.registration.facebook.clientSecret=dff14f7d24573f435e598cd928f829b6
spring.security.oauth2.client.registration.facebook.scope=public_profile,email
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/me?fields=id,name,email,picture


spring.security.oauth2.client.registration.google.clientId=24411179530-rjjqt8n2euu6jk4pahno2ehvq2ucqr6h.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret=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
spring.security.oauth2.client.registration.google.scope=profile,email
#spring.security.oauth2.client.provider.google.user-info-uri=https://graph.google.com/me?fields=id,name,email,picture



## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

spring.mvc.hiddenmethod.filter.enabled=true

### H2 Database...
#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:mem:testdb
#
#spring.datasource.username=sa
#spring.datasource.password=
#
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

#spring.jpa.defer-datasource-initialization=true
#spring.jpa.hibernate.ddl-auto=create
#spring.datasource.driverClassName=org.h2.Driver
#spring.jpa.show-sql=true
#
##spring.jpa.open-in-view=false
#
#spring.h2.console.path=/h2



## PostgreSQL

spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=1234

#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=update

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

logging.level.org.springframework=ERROR
